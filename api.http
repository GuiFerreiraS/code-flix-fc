## valid uuid = 8f4b7b9c-3f7a-4b6c-8b0c-1c9c5b8b9b6a

### 
# @name createCategory
POST http://localhost:3000/categories
Content-Type: application/json
Authorization: Bearer {{jwtToken}}

{
    "name": "Category 1",
    "description": "Description 1"
}

###

@categoryId = {{createCategory.response.body.data.id}}

###
GET http://localhost:3000/categories
Authorization: Bearer {{jwtToken}}

###
GET http://localhost:3000/categories/{{categoryId}}
Authorization: Bearer {{jwtToken}}


### 
# @name createGenre
POST http://localhost:3000/genres
Content-Type: application/json

{
    "name": "Genre 1",
    "categories_id": [
        "{{categoryId}}"
    ]
}

###

@genreId = {{createGenre.response.body.data.id}}

###

# @name createCastMember
POST http://localhost:3000/cast-members
Content-Type: application/json

{
    "name": "Cast Member 1",
    "type": 1
}

###

@castMemberId = {{createCastMember.response.body.data.id}}


###
# @name createVideo
POST http://localhost:3000/videos
Content-Type: application/json

{
    "title": "Video 1",
    "description": "Description 1",
    "year_launched": 2020,
    "is_opened": false,
    "rating": "L",
    "duration": 90,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}

###

@videoId = {{createVideo.response.body.data.id}}

###

GET http://localhost:3000/videos/{{videoId}}


###
# @name updateVideo
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: application/json

{
    "title": "Video 1aaaa",
    "description": "Description 1aaaa",
    "year_launched": 2021,
    "is_opened": false,
    "rating": "L",
    "duration": 90,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}

###

###
# @name uploadVideo
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
------WebKitFormBoundary1234--


###
GET http://localhost:3000/fake-event

###
GET http://localhost:3000/rabbitmq-fake

###

### Estou usando host.docker.internal, porque no momento o dev container com rest client está fazendo requisição de dentro do container, 
### então por localhost:8080 não funciona, mas se estiver usando o rest client fora do container, pode usar localhost:8080
POST http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=admin@user.com
&password=secret
&grant_type=password
&client_id=codeflix-admin-frontend

### configuração do openid connect server
GET http://host.docker.internal:8080/realms/codeflix/.well-known/openid-configuration

### certificados
GET http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/certs

###
# @name auth
POST http://localhost:3000/auth
Content-Type: application/json

{
    "email": "admin@user.com",
    "password": "123456"
}

###

@jwtToken = eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiYWRtaW4tY2F0YWxvZyJdfSwiaWF0IjoxNzM0NjU2MzM5LCJleHAiOjE3MzQ3NDI3Mzl9.XpEPwvUC5Zy9Cx9txxBZau0qRr7kzxycs7b8H3rTlX1eGiLGfkRZxuc2K3WsosMZCqbOk-LUNGGdDJmbffasOCleBINE1foLsaGoDwrZvGzgZp2WIqR0tSeYYOssxUbqmSMKhryubz-rcnD3RP78-Bhs3TVccjePjBQTGMxCAv5alsSTQCMBKXEtdmK4t8n0Z-lnU_T792FobPuaYEWZ0PRZn3lKNMxogKtgRk4fVvUZxWaTqrq5y1_7eUCnDALxOWbQgXFWXS8MyNVyyasy3P_YH2R8-Gluq3limlFOmE7MNLI_BcZIio7PUEiuGWJkenuFyuesDSZfyFUXLaKpyw

###
GET http://localhost:3000/auth
Content-Type: application/json
Authorization: Bearer {{jwtToken}}